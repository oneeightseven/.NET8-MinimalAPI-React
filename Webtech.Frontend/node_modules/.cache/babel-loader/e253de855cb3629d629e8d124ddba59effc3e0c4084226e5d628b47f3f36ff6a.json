{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\nimport { useCookies } from \"react-cookie\";\nimport FeedbackNotify from \"../../notify/FeedbackNotify\";\nimport * as signalR from '@microsoft/signalr';\nimport globalState from \"../../extensions/globalState\";\nimport axios from \"axios\";\nimport NotificationService from \"../../services/NotificationService\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useToken = () => {\n  _s();\n  const [cookies] = useCookies(['token']);\n  return cookies.token;\n};\n_s(useToken, \"KWItf4Qn7XyeOw4JKNC6dqw2Uu4=\", false, function () {\n  return [useCookies];\n});\nconst Notifications = () => {\n  _s2();\n  const [noti, setNoti] = useState(0);\n  const token = useToken();\n  const fetchData = async () => {\n    try {\n      console.log(\"Сработала fetchData\");\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      const countNotifications = await NotificationService.getCountNotifications();\n      localStorage.setItem('countNotification', countNotifications);\n      setNoti(countNotifications);\n      console.log(\"asdsd\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    console.log(globalState.isConnected);\n    if (!globalState.isConnected) {\n      fetchData().then();\n      const connection = new HubConnectionBuilder().withUrl('http://localhost:5252/notifications', {\n        accessTokenFactory: () => token,\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets\n      }).build();\n      connection.start().then(() => {\n        connection.invoke('GetString').then(result => {\n          console.log('Connection to SignalR established');\n          globalState.isConnected = true;\n        }).catch(error => {\n          console.error('Error connecting to SignalR:', error);\n        });\n      }).catch(console.log);\n      connection.on('ReceiveNotification', message => {\n        FeedbackNotify.newAlert();\n        const noti = parseInt(localStorage.getItem('countNotification'));\n        localStorage.setItem('countNotification', noti + 1);\n        setNoti(prevValue => prevValue + 1);\n      });\n    }\n  }, [noti]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: noti\n  }, void 0, false);\n};\n_s2(Notifications, \"VwHFDPSr0jwjS5Iuk5DAxMxr3eg=\", false, function () {\n  return [useToken];\n});\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","HubConnectionBuilder","useCookies","FeedbackNotify","signalR","globalState","axios","NotificationService","Fragment","_Fragment","jsxDEV","_jsxDEV","useToken","_s","cookies","token","Notifications","_s2","noti","setNoti","fetchData","console","log","defaults","headers","common","countNotifications","getCountNotifications","localStorage","setItem","error","isConnected","then","connection","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","build","start","invoke","result","catch","on","message","newAlert","parseInt","getItem","prevValue","children","_c","$RefreshReg$"],"sources":["/home/oneeightseven/Рабочий стол/WebTech/Webtech.Frontend/src/components/Auth/Notifications.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {HubConnectionBuilder} from '@microsoft/signalr';\nimport {useCookies} from \"react-cookie\";\nimport FeedbackNotify from \"../../notify/FeedbackNotify\";\nimport * as signalR from '@microsoft/signalr';\nimport globalState from \"../../extensions/globalState\";\nimport axios from \"axios\";\nimport NotificationService from \"../../services/NotificationService\";\n\n\nconst useToken = () => {\n    const [cookies] = useCookies(['token']);\n    return cookies.token;\n};\n\nconst Notifications = () => {\n\n    const [noti, setNoti] = useState(0);\n\n    const token = useToken();\n\n    const fetchData = async () => {\n\n        try {\n            console.log(\"Сработала fetchData\");\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n            const countNotifications = await NotificationService.getCountNotifications();\n            localStorage.setItem('countNotification', countNotifications);\n            setNoti(countNotifications);\n            console.log(\"asdsd\")\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n\n    useEffect(() => {\n        console.log(globalState.isConnected);\n        if (!globalState.isConnected) {\n\n            fetchData().then();\n\n            const connection = new HubConnectionBuilder()\n                .withUrl('http://localhost:5252/notifications', {\n                    accessTokenFactory: () => token,\n                    skipNegotiation: true,\n                    transport: signalR.HttpTransportType.WebSockets,\n                })\n                .build();\n            connection.start()\n                .then(() => {\n                    connection.invoke('GetString')\n                        .then(result => {\n                            console.log('Connection to SignalR established');\n                            globalState.isConnected = true;\n                        })\n                        .catch(error => {\n                            console.error('Error connecting to SignalR:', error);\n                        });\n                })\n                .catch(console.log);\n            connection.on('ReceiveNotification', (message) => {\n                FeedbackNotify.newAlert();\n                const noti = parseInt(localStorage.getItem('countNotification'));\n                localStorage.setItem('countNotification', noti + 1);\n                setNoti(prevValue => prevValue + 1);\n            });\n        }\n\n\n    }, [noti]);\n\n    return (\n        <>\n            {noti}\n        </>\n    );\n};\n\nexport default Notifications;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}