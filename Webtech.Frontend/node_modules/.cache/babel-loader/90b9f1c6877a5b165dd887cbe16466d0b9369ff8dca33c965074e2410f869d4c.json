{"ast":null,"code":"var _jsxFileName = \"/home/oneeightseven/webtech/src/components/Card.jsx\";\nimport React from 'react';\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Card = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container card mt-xl-2 pb-2\",\n      style: {\n        borderWidth: '1px',\n        borderColor: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-9 col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: 'black'\n            },\n            children: \"Sorting methods in .NET 8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-3 col-12 text-xl-end mt-xl-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: 'black'\n            },\n            children: \"Tuesday, 14 November\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-6 col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://imagess.hb.ru-msk.vkcs.cloud/maxresdefault.jpg\",\n            className: \"rounded\",\n            width: \"100%\",\n            alt: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-6 col-12 mt-xl-0 mt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"In this article, we'll look at the different sorting methods available in the .NET framework. We will study their algorithms, operating principles and performance. You'll also learn how to choose the most appropriate sorting method for your specific task.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-12 text-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"light\",\n            children: \"More details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","children","className","style","borderWidth","borderColor","color","fileName","_jsxFileName","lineNumber","columnNumber","src","width","alt","variant","_c","$RefreshReg$"],"sources":["/home/oneeightseven/webtech/src/components/Card.jsx"],"sourcesContent":["import React from 'react';\nimport {Button} from \"react-bootstrap\";\n\nconst Card = () => {\n    return (\n        <>\n            <div className=\"container card mt-xl-2 pb-2\" style={{borderWidth: '1px', borderColor: 'black'}}>\n                <div className=\"row\">\n                    <div className = \"col-xl-9 col-12\">\n                        <h1 style={{color: 'black'}}>Sorting methods in .NET 8</h1>\n                    </div>\n                    <div className = \"col-xl-3 col-12 text-xl-end mt-xl-3\">\n                        <h4 style={{color: 'black'}}>Tuesday, 14 November</h4>\n                    </div>\n                    <div className = \"col-xl-6 col-12\">\n                        <img src=\"https://imagess.hb.ru-msk.vkcs.cloud/maxresdefault.jpg\" className=\"rounded\" width=\"100%\" alt=\"Image\"/>\n                    </div>\n                    <div className=\"col-xl-6 col-12 mt-xl-0 mt-2\">\n                        <h4>In this article, we'll look at the different sorting methods available in the .NET framework. We will study their algorithms, operating principles and performance. You'll also learn how to choose the most appropriate sorting method for your specific task.</h4>\n                    </div>\n                    <div className=\"col-xl-12 text-end\">\n                        <Button variant={\"light\"}>More details</Button>\n                    </div>\n\n                </div>\n            </div>\n        </>\n\n\n\n    );\n};\n\nexport default Card;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACIJ,OAAA;MAAKK,SAAS,EAAC,6BAA6B;MAACC,KAAK,EAAE;QAACC,WAAW,EAAE,KAAK;QAAEC,WAAW,EAAE;MAAO,CAAE;MAAAJ,QAAA,eAC3FJ,OAAA;QAAKK,SAAS,EAAC,KAAK;QAAAD,QAAA,gBAChBJ,OAAA;UAAKK,SAAS,EAAG,iBAAiB;UAAAD,QAAA,eAC9BJ,OAAA;YAAIM,KAAK,EAAE;cAACG,KAAK,EAAE;YAAO,CAAE;YAAAL,QAAA,EAAC;UAAyB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC,eACNb,OAAA;UAAKK,SAAS,EAAG,qCAAqC;UAAAD,QAAA,eAClDJ,OAAA;YAAIM,KAAK,EAAE;cAACG,KAAK,EAAE;YAAO,CAAE;YAAAL,QAAA,EAAC;UAAoB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC,eACNb,OAAA;UAAKK,SAAS,EAAG,iBAAiB;UAAAD,QAAA,eAC9BJ,OAAA;YAAKc,GAAG,EAAC,wDAAwD;YAACT,SAAS,EAAC,SAAS;YAACU,KAAK,EAAC,MAAM;YAACC,GAAG,EAAC;UAAO;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/G,CAAC,eACNb,OAAA;UAAKK,SAAS,EAAC,8BAA8B;UAAAD,QAAA,eACzCJ,OAAA;YAAAI,QAAA,EAAI;UAA+P;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvQ,CAAC,eACNb,OAAA;UAAKK,SAAS,EAAC,oBAAoB;UAAAD,QAAA,eAC/BJ,OAAA,CAACF,MAAM;YAACmB,OAAO,EAAE,OAAQ;YAAAb,QAAA,EAAC;UAAY;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAKX,CAAC;AAACK,EAAA,GA5BIf,IAAI;AA8BV,eAAeA,IAAI;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}