{"ast":null,"code":"// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { AbortError } from \"./Errors\";\nimport { FetchHttpClient } from \"./FetchHttpClient\";\nimport { HttpClient } from \"./HttpClient\";\nimport { Platform } from \"./Utils\";\nimport { XhrHttpClient } from \"./XhrHttpClient\";\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\nexport class DefaultHttpClient extends HttpClient {\n  /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\n  constructor(logger) {\n    super();\n    if (typeof fetch !== \"undefined\" || Platform.isNode) {\n      this._httpClient = new FetchHttpClient(logger);\n    } else if (typeof XMLHttpRequest !== \"undefined\") {\n      this._httpClient = new XhrHttpClient(logger);\n    } else {\n      throw new Error(\"No usable HttpClient found.\");\n    }\n  }\n  /** @inheritDoc */\n  send(request) {\n    // Check that abort was not signaled before calling send\n    if (request.abortSignal && request.abortSignal.aborted) {\n      return Promise.reject(new AbortError());\n    }\n    if (!request.method) {\n      return Promise.reject(new Error(\"No method defined.\"));\n    }\n    if (!request.url) {\n      return Promise.reject(new Error(\"No url defined.\"));\n    }\n    return this._httpClient.send(request);\n  }\n  getCookieString(url) {\n    return this._httpClient.getCookieString(url);\n  }\n}","map":{"version":3,"names":["AbortError","FetchHttpClient","HttpClient","Platform","XhrHttpClient","DefaultHttpClient","constructor","logger","fetch","isNode","_httpClient","XMLHttpRequest","Error","send","request","abortSignal","aborted","Promise","reject","method","url","getCookieString"],"sources":["/home/oneeightseven/Рабочий стол/WebTech/Webtech.Frontend/node_modules/@microsoft/signalr/src/DefaultHttpClient.ts"],"sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger } from \"./ILogger\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    private readonly _httpClient: HttpClient;\r\n\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this._httpClient = new FetchHttpClient(logger);\r\n        } else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this._httpClient = new XhrHttpClient(logger);\r\n        } else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return this._httpClient.send(request);\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this._httpClient.getCookieString(url);\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,SAASA,UAAU,QAAQ,UAAU;AACrC,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,UAAU,QAAmC,cAAc;AAEpE,SAASC,QAAQ,QAAQ,SAAS;AAClC,SAASC,aAAa,QAAQ,iBAAiB;AAE/C;AACA,OAAM,MAAOC,iBAAkB,SAAQH,UAAU;EAG7C;EACAI,YAAmBC,MAAe;IAC9B,KAAK,EAAE;IAEP,IAAI,OAAOC,KAAK,KAAK,WAAW,IAAIL,QAAQ,CAACM,MAAM,EAAE;MACjD,IAAI,CAACC,WAAW,GAAG,IAAIT,eAAe,CAACM,MAAM,CAAC;KACjD,MAAM,IAAI,OAAOI,cAAc,KAAK,WAAW,EAAE;MAC9C,IAAI,CAACD,WAAW,GAAG,IAAIN,aAAa,CAACG,MAAM,CAAC;KAC/C,MAAM;MACH,MAAM,IAAIK,KAAK,CAAC,6BAA6B,CAAC;;EAEtD;EAEA;EACOC,IAAIA,CAACC,OAAoB;IAC5B;IACA,IAAIA,OAAO,CAACC,WAAW,IAAID,OAAO,CAACC,WAAW,CAACC,OAAO,EAAE;MACpD,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIlB,UAAU,EAAE,CAAC;;IAG3C,IAAI,CAACc,OAAO,CAACK,MAAM,EAAE;MACjB,OAAOF,OAAO,CAACC,MAAM,CAAC,IAAIN,KAAK,CAAC,oBAAoB,CAAC,CAAC;;IAE1D,IAAI,CAACE,OAAO,CAACM,GAAG,EAAE;MACd,OAAOH,OAAO,CAACC,MAAM,CAAC,IAAIN,KAAK,CAAC,iBAAiB,CAAC,CAAC;;IAGvD,OAAO,IAAI,CAACF,WAAW,CAACG,IAAI,CAACC,OAAO,CAAC;EACzC;EAEOO,eAAeA,CAACD,GAAW;IAC9B,OAAO,IAAI,CAACV,WAAW,CAACW,eAAe,CAACD,GAAG,CAAC;EAChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}