{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\nimport { useCookies } from \"react-cookie\";\nimport FeedbackNotify from \"../../notify/FeedbackNotify\";\nimport * as signalR from '@microsoft/signalr';\nimport globalState from \"../../extensions/globalState\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useToken = () => {\n  _s();\n  const [cookies] = useCookies(['token']);\n  return cookies.token;\n};\n_s(useToken, \"KWItf4Qn7XyeOw4JKNC6dqw2Uu4=\", false, function () {\n  return [useCookies];\n});\nconst Notifications = () => {\n  _s2();\n  const token = useToken();\n  useEffect(() => {\n    if (!globalState.isConnected) {\n      const connection = new HubConnectionBuilder().withUrl('http://localhost:5252/notifications', {\n        accessTokenFactory: () => token,\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets\n      }).build();\n      connection.start().then(() => {\n        connection.invoke('GetString').then(result => {\n          console.log('Connection to SignalR established');\n          globalState.isConnected = true;\n        }).catch(error => {\n          console.error('Error connecting to SignalR:', error);\n        });\n      }).catch(console.log);\n      connection.on('ReceiveNotification', message => {\n        FeedbackNotify.newAlert();\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s2(Notifications, \"pkC6z3/kIlhP4GJQuft0f1Mlfto=\", false, function () {\n  return [useToken];\n});\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","HubConnectionBuilder","useCookies","FeedbackNotify","signalR","globalState","Fragment","_Fragment","jsxDEV","_jsxDEV","useToken","_s","cookies","token","Notifications","_s2","isConnected","connection","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","build","start","then","invoke","result","console","log","catch","error","on","message","newAlert","_c","$RefreshReg$"],"sources":["/home/oneeightseven/webtech/src/components/Auth/Notifications.jsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {HubConnectionBuilder} from '@microsoft/signalr';\nimport {useCookies} from \"react-cookie\";\nimport FeedbackNotify from \"../../notify/FeedbackNotify\";\nimport * as signalR from '@microsoft/signalr';\nimport globalState from \"../../extensions/globalState\";\n\nconst useToken = () => {\n    const [cookies] = useCookies(['token']);\n    return cookies.token;\n};\nconst Notifications = () => {\n\n    const token = useToken();\n\n    useEffect(() => {\n\n        if(!globalState.isConnected){\n        const connection = new HubConnectionBuilder()\n            .withUrl('http://localhost:5252/notifications', {\n                accessTokenFactory: () => token,\n                skipNegotiation: true,\n                transport: signalR.HttpTransportType.WebSockets,\n            })\n            .build();\n\n            connection.start()\n                .then(() => {\n                    connection.invoke('GetString')\n                        .then(result => {\n                            console.log('Connection to SignalR established');\n                            globalState.isConnected = true;\n                        })\n                        .catch(error => {\n                            console.error('Error connecting to SignalR:', error);\n                        });\n                })\n                .catch(console.log);\n\n\n            connection.on('ReceiveNotification', (message) => {\n                FeedbackNotify.newAlert();\n            });\n        }\n    }, []);\n\n    return (\n        <>\n        </>\n    );\n};\n\nexport default Notifications;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,oBAAoB,QAAO,oBAAoB;AACvD,SAAQC,UAAU,QAAO,cAAc;AACvC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAO,KAAKC,OAAO,MAAM,oBAAoB;AAC7C,OAAOC,WAAW,MAAM,8BAA8B;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,CAAC,GAAGV,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;EACvC,OAAOU,OAAO,CAACC,KAAK;AACxB,CAAC;AAACF,EAAA,CAHID,QAAQ;EAAA,QACQR,UAAU;AAAA;AAGhC,MAAMY,aAAa,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAExB,MAAMF,KAAK,GAAGH,QAAQ,CAAC,CAAC;EAExBV,SAAS,CAAC,MAAM;IAEZ,IAAG,CAACK,WAAW,CAACW,WAAW,EAAC;MAC5B,MAAMC,UAAU,GAAG,IAAIhB,oBAAoB,CAAC,CAAC,CACxCiB,OAAO,CAAC,qCAAqC,EAAE;QAC5CC,kBAAkB,EAAEA,CAAA,KAAMN,KAAK;QAC/BO,eAAe,EAAE,IAAI;QACrBC,SAAS,EAAEjB,OAAO,CAACkB,iBAAiB,CAACC;MACzC,CAAC,CAAC,CACDC,KAAK,CAAC,CAAC;MAERP,UAAU,CAACQ,KAAK,CAAC,CAAC,CACbC,IAAI,CAAC,MAAM;QACRT,UAAU,CAACU,MAAM,CAAC,WAAW,CAAC,CACzBD,IAAI,CAACE,MAAM,IAAI;UACZC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;UAChDzB,WAAW,CAACW,WAAW,GAAG,IAAI;QAClC,CAAC,CAAC,CACDe,KAAK,CAACC,KAAK,IAAI;UACZH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACxD,CAAC,CAAC;MACV,CAAC,CAAC,CACDD,KAAK,CAACF,OAAO,CAACC,GAAG,CAAC;MAGvBb,UAAU,CAACgB,EAAE,CAAC,qBAAqB,EAAGC,OAAO,IAAK;QAC9C/B,cAAc,CAACgC,QAAQ,CAAC,CAAC;MAC7B,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI1B,OAAA,CAAAF,SAAA,mBACE,CAAC;AAEX,CAAC;AAACQ,GAAA,CAvCID,aAAa;EAAA,QAEDJ,QAAQ;AAAA;AAAA0B,EAAA,GAFpBtB,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}